buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
    
}
plugins {
    id "org.sonarqube" version "2.2.1"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.sonarqube'
  apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {	
   baseName = 'SpringBootDemo'
    version = '1.0'
}

repositories {
    mavenCentral()
}
dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Brixton.RELEASE'
  }
}
dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
     compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile('org.springframework.boot:spring-boot-starter-security')
    compile group: 'com.google.code.gson', name: 'gson', version:'2.7'
    
//for jasper report
		compile group: 'com.lowagie', name: 'itext', version: '2.1.7'
		compile group: 'net.sourceforge.dynamicreports', name: 'dynamicreports-core', version: '3.1.3'
		    
    
//for cloud
		compile('org.springframework.cloud:spring-cloud-starter-config')    
		
 //Oauth2
    // https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.12.RELEASE'
    
  	// https://mvnrepository.com/artifact/org.codehaus.sonar/sonar-maven-plugin
	//compile group: 'org.codehaus.sonar', name: 'sonar-maven-plugin', version: '5.1'
    
}
sonarqube {
  properties {
    property "sonar.projectName", "SampleGradle"
    property "sonar.projectKey", "SampleGradle"
    property "sonar.test.inclusions","${project.buildDir}/src/test/java"
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.jacoco.reportPath", "${buildDir}/jacoco/test.exec"
    property "sonar.web.port",9000
  }
  }

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
